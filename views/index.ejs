<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Forecast</title>
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">
    <link rel="stylesheet" href="./styles.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.34/moment-timezone-with-data.min.js"></script>
    <style>
        .map-container {
            width: 90%;
            max-width: 1200px;
            height: 500px;
            margin: 30px auto;
            border: 1px solid #3d31a8;
            border-radius: 20px;
            overflow: hidden;
        }

        #weather-map {
            width: 100%;
            height: 100%;
        }

        /* Optional: Style the map controls */
        #map-controls {
            display: flex;
            justify-content: center;
            margin-top: 10px;
        }

        #map-controls button {
            margin: 0 5px;
            padding: 10px 15px;
            background-color: #00796b;
            border: none;
            border-radius: 5px;
            color: white;
            cursor: pointer;
            font-size: 14px;
        }

        #map-controls button:hover {
            background-color: #004d40;
        }
        /* Background icon animations */
        .background-icons {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: -1;
            pointer-events: none;
        }

        .background-icons img {
            position: absolute;
            width: 100px;
            height: 100px;
            opacity: 0.5;
            animation: moveBackground 20s linear infinite;
        }

        @keyframes moveBackground {
            0% {
                transform: translateX(0);
            }
            100% {
                transform: translateX(-100%);
            }
        }

        /* Customize the size and animation for each icon */
        .background-icons img.sun {
            top: 20%;
            left: -20%;
            animation-duration: 15s;
        }
        .background-icons img.cloud {
            top: 50%;
            left: -10%;
            animation-duration: 25s;
        }
        .background-icons img.rain {
            top: 80%;
            left: -30%;
            animation-duration: 30s;
        }
    </style>
</head>
<body>
    <%- include('partials/header') %>

    <!-- Background icons -->
    <div class="background-icons">
        <img src="path/to/sun-icon.png" alt="Sun" class="sun">
        <img src="path/to/cloud-icon.png" alt="Cloud" class="cloud">
        <img src="path/to/rain-icon.png" alt="Rain" class="rain">
    </div>

    <main class="weather-main">
        <div class="weather-section">
            <h1>Weather Forecast</h1>
            <form action="/" method="get" class="search-form">
                <input type="text" name="city" placeholder="Search by city..." value="<%= city %>">
                <button type="submit">
                    <i class='bx bx-search'></i>
                </button>
            </form>

            <% if (weatherData) { %>
                <div class="weather-info">
                    <p class="date-time" id="local-time">
                        <%= new Date(weatherData.dt * 1000).toLocaleString("en-GB", {
                            weekday: 'long',
                            day: 'numeric',
                            month: 'long',
                            year: 'numeric',
                            hour: '2-digit',
                            minute: '2-digit'
                        }) %> | Local time: <span id="local-time-display"></span>
                    </p>
                    <h2><%= city %>, <%= weatherData.sys.country %></h2>
                    <div class="weather-condition">
                        <img src="http://openweathermap.org/img/wn/<%= weatherData.weather[0].icon %>.png" alt="Weather Icon" class="weather-icon">
                        <p><%= weatherData.weather[0].description %></p>
                    </div>
                    <div class="temp-section">
                        <p class="temperature">
                            <img src="<%= getTempIcon(weatherData.main.temp) %>" alt="Temp Icon" class="temp-icon">
                            <%= (weatherData.main.temp - 273.15).toFixed(1) %>°C
                        </p>
                    </div>
                    <div class="extra-info">
                        <p>Real Feel: <%= (weatherData.main.feels_like - 273.15).toFixed(1) %>°C</p>
                        <p>Humidity: <%= weatherData.main.humidity %>%</p>
                        <p>Wind: <%= weatherData.wind.speed %> km/h</p>
                    </div>
                    <div class="detailed-forecast">
                        <p>If you want to see detailed forecast</p>
                        <button><a href='/hourly'>3 hour forecast</a></button>
                        <button><a href='/weekly'>7-Day forecast</a></button>
                    </div>
                </div>
            <% } %>
        </div>
    </main>

    <section class="map-container">
        <div id="weather-map" style="height: 500px;"></div>
        <!-- Optional: Add controls for weather layers -->
        <div id="map-controls">
            <button id="show-temp">Show Temperature</button>
            <button id="show-precipitation">Show Precipitation</button>
            <button id="show-wind">Show Wind Speed</button>
        </div>
    </section>

    <section class="content-box">
        <h2>Welcome to WeatherWave</h2>
        <p>Your go-to source for accurate and up-to-date weather forecasts. Explore our features and stay informed about the weather in your area. Utilize our interactive map, view hourly and weekly forecasts, and get detailed weather insights tailored to your location.</p>
    </section>

    <%- include('partials/footer') %>

    <script>
        async function fetchTimezone(city) {
            try {
                const apiKey = 'e0cdaa6e3b13492d8057570e5bd90dc2'; // Replace with your API key
                const response = await fetch(`https://api.ipgeolocation.io/timezone?apiKey=${apiKey}&location=${city}`);
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const data = await response.json();
                console.log('Timezone API response:', data);
                return data;
            } catch (error) {
                console.error('Error fetching timezone data:', error);
                window.location.href = '/error'; // Redirect to error page
                return null;
            }
        }

        function formatTime(date) {
            return date.toLocaleString("en-GB", {
                weekday: 'long',
                day: 'numeric',
                month: 'long',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                hour12: true
            });
        }

        async function updateLocalTime() {
            const city = '<%= city %>'; // Use the city name from your server-side code
            const timezoneData = await fetchTimezone(city);

            if (timezoneData && timezoneData.timezone) {
                const localTime = moment.utc().tz(timezoneData.timezone).format('YYYY-MM-DD HH:mm:ss');
                document.getElementById('local-time-display').textContent = `Local time: ${localTime}`;
            } else {
                console.error('Timezone data is invalid or missing.');
                document.getElementById('local-time-display').textContent = 'Local time: Error fetching time';
            }
        }

        // Call the updateLocalTime function once the page loads
        document.addEventListener('DOMContentLoaded', updateLocalTime);

        function getTempIcon(temp) {
            if (temp >= 30) {
                return 'public/icons/high-temp.jpg'; // High temperature
            } else if (temp >= 15) {
                return 'public/icons/mid-temp.png'; // Mild temperature
            } else {
                return 'public/icons/low-temp.webp'; // Low temperature
            }
        }

        // Initialize the map
        document.addEventListener('DOMContentLoaded', function() {
            const map = L.map('weather-map').setView([51.505, -0.09], 13);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            // Example: Add a marker
            L.marker([51.5, -0.09]).addTo(map)
                .bindPopup('A pretty CSS3 popup.<br> Easily customizable.')
                .openPopup();
        });
    </script>
</body>
</html>
